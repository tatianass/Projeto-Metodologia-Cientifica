data <- read.csv("df", header = TRUE, sep = ";")
setwd("~/ufcg/mc")
data <- read.csv("df", header = TRUE, sep = ";")
data <- read.csv("result", header = TRUE, sep = ";")
data <- read.csv("result.csv", header = TRUE, sep = ";")
setwd("~/ufcg/mc")
data <- read.csv("result.csv", header = TRUE, sep = ";")
setwd("~/ufcg/mc/Projeto-Metodologia-Cientifica")
data <- read.csv("result.csv", header = TRUE, sep = ";")
View(data)
seq <- subset(data, type=="sequencial")
pl <- subset(data, type=="parallel")
View(pl)
boxplot(time~type,data=data)
seq_mt <- mean(seq$time)
pl_mt <- mean(pl$time)
s <- c("sequencial", seq_mt)
p <- c("parallel", pl_mt)
df[nrow(df) +1] <- s
df[nrow(df) +1] <- p
source('~/ufcg/mc/Projeto-Metodologia-Cientifica/analyse.R')
df[nrow(df) +1,] <- s
df[nrow(df) +1,] <- s
source('~/ufcg/mc/Projeto-Metodologia-Cientifica/analyse.R')
df[nrow(df) + 1, ] <- s
df[nrow(df) + 1, ] <- s
s <- c("sequencial", seq_mt)
p <- c("parallel", pl_mt)
df[nrow(df) + 1, ] <- p
df[nrow(df) + 1, ] <- s
source('~/ufcg/mc/Projeto-Metodologia-Cientifica/analyse.R')
source('~/ufcg/mc/Projeto-Metodologia-Cientifica/analyse.R')
df <- data.frame(type=character(0), mean_time(0),stringsAsFactors=FALSE)
data <- read.csv("result.csv", header = TRUE, sep = ";")
seq <- subset(data, type=="sequencial")
pl <- subset(data, type=="parallel")
boxplot(time~type,data=data)
df <- data.frame(type=character(0), mean_time(0),stringsAsFactors=FALSE)
seq_mt <- mean(seq$time)
pl_mt <- mean(pl$time)
s <- c("sequencial", seq_mt)
p <- c("parallel", pl_mt)
df[1, ] <- s
df[2,] <- p
df[1] <- s
df[2] <- p
source('~/ufcg/mc/Projeto-Metodologia-Cientifica/analyse.R')
df <- data.frame(type=character(0), mean_time(0)=numeric(0),stringsAsFactors=FALSE)
source('~/ufcg/mc/Projeto-Metodologia-Cientifica/analyse.R')
df <- data.frame(type=character(0), mean_time=numeric(0),stringsAsFactors=FALSE)
df[nrow(df) + 1, ] <- s
df[nrow(df) + 1, ] <- p
View(df)
boxplot(time~type,data=df)
source('~/ufcg/mc/Projeto-Metodologia-Cientifica/analyse.R')
boxplot(time~mean_time,data=df)
source('~/ufcg/mc/Projeto-Metodologia-Cientifica/analyse.R')
source('~/ufcg/mc/Projeto-Metodologia-Cientifica/analyse.R')
boxplot(mean_time~type,data=df)
source('~/ufcg/mc/Projeto-Metodologia-Cientifica/analyse.R')
boxplot(type~mean_time,data=df)
View(df)
source('~/ufcg/mc/Projeto-Metodologia-Cientifica/analyse.R')
source('~/ufcg/mc/Projeto-Metodologia-Cientifica/analyse.R')
source('~/ufcg/mc/Projeto-Metodologia-Cientifica/analyse.R')
source('~/ufcg/mc/Projeto-Metodologia-Cientifica/analyse.R')
source('~/ufcg/mc/Projeto-Metodologia-Cientifica/analyse.R')
boxplot(mean_time~type,data=df)
df[nrow(df) + 1, ] <- s
df[nrow(df) + 1, ] <- p
boxplot(mean_time~type,data=df)
source('~/ufcg/mc/Projeto-Metodologia-Cientifica/analyse.R')
source('~/ufcg/mc/Projeto-Metodologia-Cientifica/analyse.R')
anova <- aov(mean_time~type,data=df)
summary(anova)
source('~/ufcg/mc/Projeto-Metodologia-Cientifica/analyse.R')
summary(anova)
data <- read.csv("result.csv", header = TRUE, sep = ";")
seq <- subset(data, type=="sequencial")
pl <- subset(data, type=="parallel")
df <- data.frame(type=character(0), mean_time=numeric(0),stringsAsFactors=FALSE)
seq_mt <- mean(seq$time)
pl_mt <- mean(pl$time)
s <- c("sequencial", seq_mt)
p <- c("parallel", pl_mt)
df[nrow(df) + 1, ] <- s
df[nrow(df) + 1, ] <- p
#Função para análise de variância (variável resposta ~ variável preditora)
anova <- aov(mean_time~type,data=df)
#Verificar um sumário dos resultados
summary(anova)
#Teste de normalidade (a normalidade é alcançada com um valor de p > 0,05)
shapiro.test(resid(anova))
#carregar pacote para rodar a função do teste para homogeneidade das variâncias
#Caso não tenho instalado é só digitar: install.packages("car")
library(car)
#Teste da homogeneidade das variâncias (a homogeneidade é alcançada com valores acima de p acima de 0,05)
leveneTest(mean_time~type,data=df)
# O resultado da ANOVA foi significativo a um p < 0,05, ou seja, é necessário realizar um teste post-hoc para verificar quais grupos diferem entre si
#Teste de Tukey
TukeyHSD(anova)
#Caso queira visualizar o gráfico
boxplot(time~type,data=data)
data <- read.csv("result.csv", header = TRUE, sep = ";")
seq <- subset(data, type=="sequencial")
pl <- subset(data, type=="parallel")
df <- data.frame(type=character(0), mean_time=numeric(0),stringsAsFactors=FALSE)
seq_mt <- mean(seq$time)
pl_mt <- mean(pl$time)
s <- c("sequencial", seq_mt)
p <- c("parallel", pl_mt)
df[nrow(df) + 1, ] <- s
df[nrow(df) + 1, ] <- p
#Função para análise de variância (variável resposta ~ variável preditora)
anova <- aov(mean_time~type,data=df)
#Verificar um sumário dos resultados
summary(anova)
shapiro.test(resid(anova))
TukeyHSD(anova)
data <- read.csv("result.csv", header = TRUE, sep = ";")
#Função para análise de variância (variável resposta ~ variável preditora)
anova <- aov(time~type,data=data)
#Verificar um sumário dos resultados
summary(anova)
#Teste de normalidade (a normalidade é alcançada com um valor de p > 0,05)
shapiro.test(resid(anova))
#carregar pacote para rodar a função do teste para homogeneidade das variâncias
#Caso não tenho instalado é só digitar: install.packages("car")
library(car)
#Teste da homogeneidade das variâncias (a homogeneidade é alcançada com valores acima de p acima de 0,05)
leveneTest(time~type,data=data)
# O resultado da ANOVA foi significativo a um p < 0,05, ou seja, é necessário realizar um teste post-hoc para verificar quais grupos diferem entre si
#Teste de Tukey
TukeyHSD(anova)
dat <- data.frame(x = rnorm(10, 30, .2), y = runif(10, 3, 5))
View(dat)
scaled.dat <- scale(dat)
# check that we get mean of 0 and sd of 1
colMeans(scaled.dat)  # faster version of apply(scaled.dat, 2, mean)
apply(scaled.dat, 2, sd)
View(scaled.dat)
dat <- data.frame(x = rnorm(10, 30, .2), y = runif(10, 3, 5))
scaled.dat <- scale(dat)
View(scaled.dat)
scaled.dat <- scale(data$time)
View(scaled.dat)
dat <- df
dat <- scale(dat$time)
dat <- df
dat$time <- scale(dat$time)
dat <- data.frame(x = rnorm(10, 30, .2), y = runif(10, 3, 5))
scaled.dat <- scale(dat)
# check that we get mean of 0 and sd of 1
colMeans(scaled.dat)  # faster version of apply(scaled.dat, 2, mean)
apply(scaled.dat, 2, sd)
dat <- df
dat <- df
scaled.dat <- scale(dat$time)
dat <- df
data <- read.csv("result.csv", header = TRUE, sep = ";")
dat <- df
scaled.dat <- scale(dat$time)
data <- read.csv("result.csv", header = TRUE, sep = ";")
stripchart(time~type,
data=data,
main="Different strip chart for each type",
xlab="Type",
ylab="Time",
col="brown3",
group.names=c("sequencial","parallel"),
vertical=TRUE,
pch=16
)
?stripchart
stripchart(time~type,
data=data,
main="Different strip chart for each type",
xlab="Type",
ylab="Time",
col="brown3",
vertical=TRUE,
pch=19,
method = "jitter", jitter = 0.004
)
lm(time~type,data=data)
?lm
analysis <- lm(time~type,data=data)
aov(analysis)
anova <- aov(analysis)
summary(anova)
plot(analysis, which = 1)
plot(analysis, which = 2)
sresids <- rstandard(analysis)
hist(sresids)
TukeyHSD(analysis)
TukeyHSD(analysis)
TukeyHSD(anova)
summary(anova)
plot(analysis, which = 1)
hist(sresids)
hist(analysis)
hist(analysis)
plot(analysis, which = 2)
plot(analysis, which = 1)
plot(analysis, which = 2)
boxplot(data)
boxplot(data$time)
#visualizing data
stripchart(time~type,
data=data,
main="Different strip chart for each type",
xlab="Type",
ylab="Time",
col="brown3",
vertical=TRUE,
pch=19,
method = "jitter", jitter = 0.004
)
#fitting data to anova
analysis <- lm(time~type,data=data)
#anova
#h0: they are equal, h1: they are not (p<0.05)
anova <- aov(analysis)
summary(anova)
#Caso queira visualizar o gráfico
plot(analysis, which = 1)
#can se that there's a positive skewness in the data
plot(analysis, which = 2)
sresids <- rstandard(analysis)
hist(sresids)
rnorm()
boxplot(data$time)
plot(data$time, data$type)
plot(data$type, data$time)
mod <- nls(y ~ exp(a + b * x), data = data, start = list(a = 0, b = 0))
mod <- nls(y ~ exp(a + b * x), data = data, start = list(a = 0, b = 0))
mod <- nls(type ~ time, data = data, start = list(a = 0, b = 0))
mod <- nls(type ~ time, data = data, start = list(a = 0, b = 0))
mod <- nls(time ~ exp(size), data = data, start = list(a = 0, b = 0))
fit = lm(type ~ log(time))
fit = lm(type ~ log(time), data)
data <- read.csv("result.csv", header = TRUE, sep = ";")
fit = lm(type ~ log(time), data)
fit$coefficients
plot(data$time, data$type)
plot(data$type, data$time)
type
plot(data$time, data$type)
lines(data$time, data$time ^ fit$coefficients[2], col = "red")
plot(data$time, data$size)
lines(data$time, data$time ^ fit$coefficients[2], col = "red")
fit = lm(log(size) ~ log(time), data)
# Check that the estimated coefficient is 25, just as we expected!
fit$coefficients
#  (Intercept)     log(time)
# -1.477929e-13  2.500000e+01
#Plot the fitted line
plot(data$time, data$size)
lines(data$time, data$time ^ fit$coefficients[2], col = "red")
lines(data$time, data$time ^ fit$coefficients[1], col = "red")
lines(data$time, data$time ^ fit$coefficients[2], col = "red")
lines(data$time, data$time ^ fit$coefficients[2], col = "red")
plot(data$time, data$size)
lines(data$time, data$time ^ fit$coefficients[2], col = "red")
plot(data$time, data$size)
lines(data$time, data$time ^ fit$coefficients[1], col = "red")
data <- read.csv("result.csv", header = TRUE, sep = ";")
#Plot the fitted line
plot(data$time, data$size)
lines(data$time, data$time ^ fit$coefficients[2], col = "red")
data <- read.csv("result.csv", header = TRUE, sep = ";")
#visualizing data
stripchart(time~type,
data=data,
main="Different strip chart for each type",
xlab="Type",
ylab="Time",
col="brown3",
vertical=TRUE,
pch=19,
method = "jitter", jitter = 0.004
)
#fitting data to anova
analysis <- lm(time~type,data=data)
#anova
#h0: they are equal, h1: they are not (p<0.05)
anova <- aov(analysis)
summary(anova)
#Caso queira visualizar o gráfico
plot(analysis, which = 1)
#can se that there's a positive skewness in the data
plot(analysis, which = 2)
sresids <- rstandard(analysis)
hist(sresids)
#to know the variable that are significantly different
# significant difference p < 0.05
#there's just two types, so no need for turkey's test
#TukeyHSD(anova)
